#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FakePyramid
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ph15822995272_BigButton")]
	public partial class DWKDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public DWKDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ph15822995272_BigButtonConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DWKDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DWKDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DWKDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DWKDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UserView> UserViews
		{
			get
			{
				return this.GetTable<UserView>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="BigButtonUser.User_UpdateClickCounter")]
		public int User_UpdateClickCounter([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(30)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="BigButtonUser.User_Update")]
		public ISingleResult<UserView> User_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="VarChar(15)")] string userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(30)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, userName);
			return ((ISingleResult<UserView>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="BigButtonUser.User_Select")]
		public ISingleResult<UserView> User_Select([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Key", DbType="VarChar(30)")] string key)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), key);
			return ((ISingleResult<UserView>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="BigButtonUser.User_Insert")]
		public ISingleResult<UserView> User_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PayeeID", DbType="VarChar(15)")] string payeeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewUserID", DbType="VarChar(15)")] string newUserID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(30)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), payeeID, newUserID, userName);
			return ((ISingleResult<UserView>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="BigButtonUser.Setting_SelectByKey")]
		public ISingleResult<Setting_SelectByKeyResult> Setting_SelectByKey([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Key", DbType="VarChar(20)")] string key)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), key);
			return ((ISingleResult<Setting_SelectByKeyResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BigButtonUser.UserView")]
	public partial class UserView
	{
		
		private string _UserID;
		
		private string _PayeeID;
		
		private string _UserName;
		
		private string _PayeeName;
		
		private int _TransactionCount;
		
		private int _ClickCount;
		
		private System.Nullable<System.DateTime> _LastClickDateTime;
		
		private string _NextPayeeName;
		
		private System.Nullable<decimal> _Price;
		
		private System.DateTime _ServerTime;
		
		public UserView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeID", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string PayeeID
		{
			get
			{
				return this._PayeeID;
			}
			set
			{
				if ((this._PayeeID != value))
				{
					this._PayeeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(30)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayeeName", DbType="VarChar(30)")]
		public string PayeeName
		{
			get
			{
				return this._PayeeName;
			}
			set
			{
				if ((this._PayeeName != value))
				{
					this._PayeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionCount", DbType="Int NOT NULL")]
		public int TransactionCount
		{
			get
			{
				return this._TransactionCount;
			}
			set
			{
				if ((this._TransactionCount != value))
				{
					this._TransactionCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClickCount", DbType="Int NOT NULL")]
		public int ClickCount
		{
			get
			{
				return this._ClickCount;
			}
			set
			{
				if ((this._ClickCount != value))
				{
					this._ClickCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastClickDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastClickDateTime
		{
			get
			{
				return this._LastClickDateTime;
			}
			set
			{
				if ((this._LastClickDateTime != value))
				{
					this._LastClickDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextPayeeName", DbType="VarChar(30)")]
		public string NextPayeeName
		{
			get
			{
				return this._NextPayeeName;
			}
			set
			{
				if ((this._NextPayeeName != value))
				{
					this._NextPayeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerTime", DbType="DateTime NOT NULL")]
		public System.DateTime ServerTime
		{
			get
			{
				return this._ServerTime;
			}
			set
			{
				if ((this._ServerTime != value))
				{
					this._ServerTime = value;
				}
			}
		}
	}
	
	public partial class Setting_SelectByKeyResult
	{
		
		private string _Value;
		
		public Setting_SelectByKeyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
